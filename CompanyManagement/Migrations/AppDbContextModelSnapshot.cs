// <auto-generated />
using System;
using CompanyManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyManagement.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AnnualRevenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FoundedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaxNumber")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Innovation St",
                            AnnualRevenue = 10000000m,
                            FoundedDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tech Innovators",
                            TaxNumber = 123456789
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Global Ave",
                            AnnualRevenue = 15000000m,
                            FoundedDate = new DateTime(2005, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Global Solutions",
                            TaxNumber = 987654321
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Green Rd",
                            AnnualRevenue = 8000000m,
                            FoundedDate = new DateTime(2010, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eco Friendly Inc.",
                            TaxNumber = 567890123
                        });
                });

            modelBuilder.Entity("CompanyManagement.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 5000000m,
                            CompanyId = 1,
                            Name = "Research and Development"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 3000000m,
                            CompanyId = 1,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 2000000m,
                            CompanyId = 2,
                            Name = "Customer Support"
                        },
                        new
                        {
                            Id = 4,
                            Budget = 2500000m,
                            CompanyId = 2,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            Budget = 1500000m,
                            CompanyId = 3,
                            Name = "Sustainability"
                        });
                });

            modelBuilder.Entity("CompanyManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("LandlineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "101 Main St",
                            BirthDate = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City A",
                            DepartmentId = 1,
                            LandlineNumber = "098-765-4321",
                            MobileNumber = "123-456-7890",
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            Id = 2,
                            Address = "102 Main St",
                            BirthDate = new DateTime(1987, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City B",
                            DepartmentId = 1,
                            LandlineNumber = "098-765-4322",
                            MobileNumber = "123-456-7891",
                            Name = "Bob Smith"
                        },
                        new
                        {
                            Id = 3,
                            Address = "103 Main St",
                            BirthDate = new DateTime(1990, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City C",
                            DepartmentId = 2,
                            LandlineNumber = "098-765-4323",
                            MobileNumber = "123-456-7892",
                            Name = "Charlie Brown"
                        },
                        new
                        {
                            Id = 4,
                            Address = "104 Main St",
                            BirthDate = new DateTime(1992, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City D",
                            DepartmentId = 2,
                            LandlineNumber = "098-765-4324",
                            MobileNumber = "123-456-7893",
                            Name = "David Williams"
                        },
                        new
                        {
                            Id = 5,
                            Address = "105 Main St",
                            BirthDate = new DateTime(1994, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City E",
                            DepartmentId = 3,
                            LandlineNumber = "098-765-4325",
                            MobileNumber = "123-456-7894",
                            Name = "Emma Wilson"
                        },
                        new
                        {
                            Id = 6,
                            Address = "106 Main St",
                            BirthDate = new DateTime(1996, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City F",
                            DepartmentId = 3,
                            LandlineNumber = "098-765-4326",
                            MobileNumber = "123-456-7895",
                            Name = "Frank Miller"
                        },
                        new
                        {
                            Id = 7,
                            Address = "107 Main St",
                            BirthDate = new DateTime(1998, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City G",
                            DepartmentId = 4,
                            LandlineNumber = "098-765-4327",
                            MobileNumber = "123-456-7896",
                            Name = "Grace Davis"
                        },
                        new
                        {
                            Id = 8,
                            Address = "108 Main St",
                            BirthDate = new DateTime(2000, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City H",
                            DepartmentId = 4,
                            LandlineNumber = "098-765-4328",
                            MobileNumber = "123-456-7897",
                            Name = "Henry Garcia"
                        },
                        new
                        {
                            Id = 9,
                            Address = "109 Main St",
                            BirthDate = new DateTime(2002, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City I",
                            DepartmentId = 5,
                            LandlineNumber = "098-765-4329",
                            MobileNumber = "123-456-7898",
                            Name = "Ivy Martinez"
                        },
                        new
                        {
                            Id = 10,
                            Address = "110 Main St",
                            BirthDate = new DateTime(2004, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BirthPlace = "City J",
                            DepartmentId = 5,
                            MobileNumber = "123-456-7899",
                            Name = "Jack Taylor"
                        });
                });

            modelBuilder.Entity("CompanyManagement.Models.Department", b =>
                {
                    b.HasOne("CompanyManagement.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CompanyManagement.Models.Employee", b =>
                {
                    b.HasOne("CompanyManagement.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyManagement.Models.Company", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CompanyManagement.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
